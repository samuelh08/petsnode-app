import {
  Alert,
  Box,
  Card,
  CardActionArea,
  CardContent,
  CardMedia,
  CircularProgress,
  FormControl,
  Grid,
  InputLabel,
  MenuItem,
  Select,
  Tab,
  Tabs,
  Typography,
} from '@mui/material';
import Head from 'next/head';
import { useState } from 'react';
import useSWR from 'swr';

import { getPets } from '../../api/pets';

export default function Pets() {
  const [animal, setAnimal] = useState('Dog');
  const [size, setSize] = useState('');
  const [age, setAge] = useState('');
  const [sex, setSex] = useState('');
  const { data, error } = useSWR(
    `/pets?status=Available&animal=${animal}&size=${size}&age=${age}&sex=${sex}`,
    getPets,
  );

  const sexes = ['Any', 'Male', 'Female', 'Unknown'];
  const dogSizes = ['Any', 'Mini', 'Small', 'Medium', 'Big', 'Giant'];
  const sizes = ['Any', 'Small', 'Medium', 'Large', 'Extra Large'];
  const ages = ['Any', 'Baby', 'Young', 'Adult', 'Senior'];
  const dogAges = ['Any', 'Puppy', 'Young', 'Adult', 'Senior'];
  const catAges = ['Any', 'Kitten', 'Young', 'Adult', 'Senior'];

  const handleChangeAnimal = (event, newValue) => {
    setAnimal(newValue);
  };
  const handleChangeAge = (event) => {
    setAge(event.target.value);
  };
  const handleChangeSize = (event) => {
    setSize(event.target.value);
  };
  const handleChangeSex = (event) => {
    setSex(event.target.value);
  };

  if (!data) {
    return <CircularProgress color="inherit" />;
  }

  return (
    <>
      <Head>
        <title>PetsNode</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {error && <Alert severity="error">{error}</Alert>}
        <Box sx={{ width: '100%' }}>
          <Tabs
            value={animal}
            onChange={handleChangeAnimal}
            textColor="secondary"
            indicatorColor="secondary"
            aria-label="animal filter"
            centered
          >
            <Tab value="Dog" label="Dogs" />
            <Tab value="Cat" label="Cats" />
            <Tab value="Other" label="Others" />
          </Tabs>
        </Box>
        <Grid container spacing={2}>
          <Grid item xs={4}>
            <Grid container direction="column" spacing={3} margin="10px">
              <Grid item>
                <FormControl fullWidth>
                  <InputLabel htmlFor="size">Size</InputLabel>
                  <Select
                    name="size"
                    id="size"
                    label="size"
                    margin="4"
                    onChange={handleChangeSize}
                  >
                    {animal === 'Dog'
                      ? dogSizes.map((option) => (
                          <MenuItem key={option} value={option}>
                            {option}
                          </MenuItem>
                        ))
                      : sizes.map((option) => (
                          <MenuItem key={option} value={option}>
                            {option}
                          </MenuItem>
                        ))}
                  </Select>
                </FormControl>
              </Grid>
              <Grid item>
                <FormControl fullWidth>
                  <InputLabel htmlFor="sex">Sex</InputLabel>
                  <Select
                    name="sex"
                    id="sex"
                    label="sex"
                    onChange={handleChangeSex}
                  >
                    {sexes.map((option) => (
                      <MenuItem key={option} value={option}>
                        {option}
                      </MenuItem>
                    ))}
                  </Select>
                </FormControl>
              </Grid>
              <Grid item>
                <FormControl fullWidth>
                  <InputLabel htmlFor="age">Age</InputLabel>
                  <Select
                    name="age"
                    id="age"
                    label="age"
                    onChange={handleChangeAge}
                  >
                    {animal === 'Dog' &&
                      dogAges.map((option) => (
                        <MenuItem key={option} value={option}>
                          {option}
                        </MenuItem>
                      ))}
                    {animal === 'Cat' &&
                      catAges.map((option) => (
                        <MenuItem key={option} value={option}>
                          {option}
                        </MenuItem>
                      ))}
                    {animal === 'Other' &&
                      ages.map((option) => (
                        <MenuItem key={option} value={option}>
                          {option}
                        </MenuItem>
                      ))}
                  </Select>
                </FormControl>
              </Grid>
            </Grid>
          </Grid>
          <Grid item xs={8}>
            <Box
              sx={{
                display: 'flex',
                justifyContent: 'space-around',
                alignContent: 'flex-start',
              }}
              margin={4}
            >
              {data?.data.map((item) => (
                <Card key={item._id} sx={{ maxWidth: 200 }}>
                  <CardActionArea href={`/pets/${item._id}`}>
                    <CardMedia
                      component="img"
                      image={item.picture}
                      alt={item.name}
                    />
                    <CardContent>
                      <Typography variant="h5" textAlign="center">
                        {item.name}
                      </Typography>
                    </CardContent>
                  </CardActionArea>
                </Card>
              ))}
            </Box>
          </Grid>
        </Grid>
      </main>

      <footer></footer>
    </>
  );
}
